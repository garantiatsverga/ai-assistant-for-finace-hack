import asyncio
import sys
import os

sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

async def debug_finance():
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –§–ò–ù–ê–ù–°–û–í–û–ì–û –ê–°–°–ò–°–¢–ï–ù–¢–ê")
    print("=" * 50)
    
    try:
        from ai_assistant.parsers.financial_parser import FinancialDataParser
        from ai_assistant.src.financial_assistant import FinancialAssistant
        
        print("‚úÖ –ú–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–µ—Ä –Ω–∞–ø—Ä—è–º—É—é
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–µ—Ä...")
        parser = FinancialDataParser()
        
        print("üìà –ó–∞–ø—Ä–æ—Å —Å—Ç–∞–≤–∫–∏ –¶–ë...")
        summary = await parser.get_market_summary()
        print(f"–î–∞–Ω–Ω—ã–µ: {summary}")
        
        if 'key_rate' in summary:
            print(f"‚úÖ –°—Ç–∞–≤–∫–∞ –¶–ë: {summary['key_rate']}")
        else:
            print("‚ùå –°—Ç–∞–≤–∫–∞ –¶–ë –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –¥–∞–Ω–Ω—ã—Ö")
        
        await parser.close()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
        print("\nü§ñ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞...")
        assistant = FinancialAssistant()
        
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ '—Å—Ç–∞–≤–∫–∞ –¶–ë'...")
        question = "—Å—Ç–∞–≤–∫–∞ –¶–ë"
        response = await assistant._handle_financial_question(question)
        print(f"–û—Ç–≤–µ—Ç —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ –º–æ–¥—É–ª—è: {response}")
        
        if response is None:
            print("‚ùå –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –º–æ–¥—É–ª—å –≤–µ—Ä–Ω—É–ª None - –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –±–∞–∑–æ–≤—ã–π RAG")
        else:
            print("‚úÖ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –º–æ–¥—É–ª—å –≤–µ—Ä–Ω—É–ª –æ—Ç–≤–µ—Ç")
            
        await assistant.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(debug_finance())